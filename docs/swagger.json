{
    "swagger": "2.0",
    "info": {
        "description": "The API is currently live at https://api.liteseed.xyz",
        "title": "Liteseed API",
        "contact": {
            "name": "API Support",
            "url": "https://liteseed.xyz/support",
            "email": "support@liteseed.xyz"
        },
        "version": "0.0.6"
    },
    "host": "https://api.liteseed.xyz",
    "paths": {
        "/price/{bytes}": {
            "get": {
                "description": "Get the current price of data upload using the Liteseed Network.\nIt returns the price of upload in wei and the address to pay.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Get price of upload",
                "parameters": [
                    {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Size of Data",
                        "name": "bytes",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.PriceGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "424": {
                        "description": "Failed Dependency",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/tx": {
            "post": {
                "description": "Post your data in a specified ANS-104 data-item format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Post a data-item",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.PostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "424": {
                        "description": "Failed Dependency",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/tx/{id}/status": {
            "get": {
                "description": "Get the current status of a posted data-item.\nResponse \"created\", \"queued\", \"sent\", \"confirmed\", \"failed\", \"invalid\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fetch"
                ],
                "summary": "Get the status of a data-item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the data-item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "424": {
                        "description": "Failed Dependency",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/tx/{id}/{field}": {
            "get": {
                "description": "If you choose to skip field  the whole data-item is returned.\nGet only the specified field of a posted data-item.\nIn case the specified field is data it tries to automatically detect mime-type.\nYou can specify the response mime-type by either sending a mime-type query parameter or an accept header in the request.\nSupported mime-type are listed here - https://github.com/gabriel-vasile/mimetype/blob/master/supported_mimes.md.\nIf all else fails defaults to `application/octet-stream`",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Fetch"
                ],
                "summary": "Get a field of a data-item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of the data-item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mime type of the response",
                        "name": "mime-type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "bytes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "424": {
                        "description": "Failed Dependency",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        },
        "/tx/{id}/{payment_id}": {
            "put": {
                "description": "Once a payment is made send a transaction id for a data-item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Send a payment id for a data-item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "data-item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "payment id",
                        "name": "paymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.DataItemPutResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.DataItemPutResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "paymentId": {
                    "type": "string"
                }
            }
        },
        "server.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "integer"
                },
                "message": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "server.PostResponse": {
            "type": "object",
            "properties": {
                "dataCaches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deadlineHeight": {
                    "type": "integer"
                },
                "fastFinalityIndexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "server.PriceGetResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "format": "string",
                    "example": "Cbj95zDZBBhmyht6iFlEf7xmSCSVZGw436V6HWmm9Ek"
                },
                "price": {
                    "type": "string",
                    "format": "string",
                    "example": "1000000000000"
                }
            }
        }
    }
}